<?xml version="1.0" encoding="UTF-8"?>
<!--

    This file is part of Everit - Liquibase-QueryDSL Model Generator.

    Everit - Liquibase-QueryDSL Model Generator is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Everit - Liquibase-QueryDSL Model Generator is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Everit - Liquibase-QueryDSL Model Generator.  If not, see <http://www.gnu.org/licenses/>.

-->
<xsd:schema targetNamespace="http://everit.org/lqmg" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://everit.org/lqmg">

    <xsd:element name="lqmg" type="tns:LQMGType">
      <xsd:annotation>
        <xsd:documentation>Root element of LQMG configuration.</xsd:documentation>
      </xsd:annotation></xsd:element>

    <xsd:complexType name="LQMGType">
      <xsd:sequence>
        <xsd:element name="namingRules" type="tns:NamingRulesType" minOccurs="1" maxOccurs="1"></xsd:element>
      </xsd:sequence>
      <xsd:attribute name="defaultSchema" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>
            Default schema name filter. The value will be applied for each entity or namin rule in this XML if it is not
            defined there.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="defaultPackage" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>
            Default name of the java package. The value will be applied for each entity or namin rule in this XML if it
            is not defined there.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="defaultPrefix" type="xsd:string" default="Q" use="optional">
        <xsd:annotation>
          <xsd:documentation>
            Default metadata class prefix. The value will be applied for each entity or namin rule in this XML if it is
            not defined there.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="defaultSuffix" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>
            Default metadata class suffix. The value will be applied for each entity or namin rule in this XML if it is
            not defined there.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="ClassNameRuleType">
      <xsd:complexContent>
        <xsd:extension base="tns:AbstractNamingRuleType">

                <xsd:sequence>
            <xsd:element name="entity" type="xsd:string" minOccurs="1" maxOccurs="1">
              <xsd:annotation>
                <xsd:documentation>Exact name of the entity that this rull will be applied to.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="class" type="xsd:string" minOccurs="1" maxOccurs="1">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the generated class. Specified Prefix and suffix will be added to this class name.
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:sequence>
          <xsd:element name="propertyMappings" type="tns:PropertyMappingsType" minOccurs="0" maxOccurs="1"></xsd:element>
        </xsd:sequence>
                </xsd:sequence>





        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="NamingRulesType">
      <xsd:sequence maxOccurs="unbounded">
        <xsd:element name="classNameRule" type="tns:ClassNameRuleType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Definition that says the class name of an entity (table / view), </xsd:documentation>
          </xsd:annotation></xsd:element>
        <xsd:element name="regexRule" type="tns:RegexRuleType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Rule how to temprary rename an entity before generting class name from it.</xsd:documentation>
          </xsd:annotation></xsd:element>
      </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="RegexRuleType">
      <xsd:complexContent>
        <xsd:extension base="tns:AbstractNamingRuleType">

          <xsd:sequence>
            <xsd:element name="regex" type="xsd:string" maxOccurs="1" minOccurs="1">
              <xsd:annotation>
                <xsd:documentation>Regular expression that must match the entity name.</xsd:documentation>
              </xsd:annotation></xsd:element>
            <xsd:element name="replacement" type="xsd:string" maxOccurs="1" minOccurs="1">
              <xsd:annotation>
                <xsd:documentation>The replacement expression that translates the entity name that is the base of the class name generation. To get information about the syntax of the replacement expression, see the documentation of javax.util.regex.Matcher.replaceAll(String) function.</xsd:documentation>
              </xsd:annotation></xsd:element>
          </xsd:sequence>




        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="AbstractNamingRuleType">        
      <xsd:attribute name="schema" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>
            If schema name is defined, the rule will be applied only on entities that are coming from the specified
            schema. If there is a default schema specified, an empty string can define that there is no schema filter on
            this rule.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="package" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>The java package where the entities should be generated.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="prefix" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Prefix that will be added to the beginning of the class.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="suffix" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Suffix that will be added to the end of each metadata class name.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>



    <xsd:complexType name="PropertyMappingType">
      <xsd:sequence>
        <xsd:element name="name" type="xsd:string" minOccurs="1" maxOccurs="1">
          <xsd:annotation>
            <xsd:documentation>Name of the constraint or column.</xsd:documentation>
          </xsd:annotation></xsd:element>
        <xsd:element name="property" type="xsd:string" minOccurs="1" maxOccurs="1">
          <xsd:annotation>
            <xsd:documentation>Name of the property that will be generated.</xsd:documentation>
          </xsd:annotation></xsd:element>
      </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ColumnMappingType">
      <xsd:sequence>
        <xsd:element name="column" type="xsd:string"></xsd:element>
        <xsd:element name="property" type="xsd:string"></xsd:element>
      </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PropertyMappingsType">
        <xsd:sequence minOccurs="1" maxOccurs="unbounded">
        <xsd:element name="primaryKey" type="tns:PropertyMappingType" maxOccurs="unbounded" minOccurs="0"></xsd:element>
        <xsd:element name="foreignKey" type="tns:PropertyMappingType" minOccurs="0" maxOccurs="unbounded"></xsd:element>
        <xsd:element name="column" type="tns:PropertyMappingType" minOccurs="0" maxOccurs="unbounded"></xsd:element>
      </xsd:sequence>
    </xsd:complexType>
</xsd:schema>